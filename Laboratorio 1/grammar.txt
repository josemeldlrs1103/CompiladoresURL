Program				::= Decl Program'
Program'			::= Program' | ε
Decl 	    		::= Decl' Decl
Decl'		    	::= Variable | Function
VariableDecl 		::= Variable ;
Variable 	    	::= Type ident
Type 	    		::= int | double | bool | string | ident | Type []
FunctionDecl 		::= FunctionDecl' ident (Formals) Stmt
FunctionDecl'		::= Type | void
Formals	        	::= Variable Formals' , | ε 
Formals'			::=	Variable | ε
Stmt 		    	::= IfStmt | WhileStmt | Expr ; | ε 
IfStmt 	       		::= if (Expr) Stmt IfStmt'
IfStmt'	       		::= else Stmt | ε
WhileStmt   		::= while (Expr) Stmt
Expr 	        	::= LValue = Expr | Constant | LValue | this | New(ident) | ExprOr
ExprOr				::= ExprAnd ExprOr'
EsprOr' 			::= || ExprAnd ExprOr' | ε
ExprAnd				::= ExprEquals ExprAnd'
EsprAnd' 			::= && ExprEquals ExprAnd' | ε
ExprEquals			::= ExprComp ExprEquals'
ExprEquals'			::= == ExprComp ExprEquals' | != ExprComp ExprEquals' | ε
ExprComp			::= ExprAdd ExprComp'
ExprComp'			::= < ExprAdd ExprComp' | > ExprAdd ExprComp' | <= ExprAdd ExprComp' | >= ExprAdd ExprComp' | ε
ExprAdd				::= ExprMul ExprAdd'
ExprAdd'			::= + ExprMul ExprAdd' | - ExprMul ExprAdd' | ε
ExprMul				::= ExprPre ExprMul'
ExprMul'	        ::= * ExprPre ExprMul' | / ExprMul ExprAdd' | % ExprMul ExprAdd' | ε 
ExprPre				::= ExprParen ExprPre'
ExprPre'			::= - ExprParen ExprPre' | ! ExprParen ExprPre' | ε
ExprParen			::= (Expr) | ε
LValue	    		::= ident | Expr.ident | Expr [Expr]
Constant	    	::= intConstant | doubleConstant | boolConstant | stringConstant | null